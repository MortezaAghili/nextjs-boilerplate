{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { InitialState } from './state';\nimport { actionTypes } from './actionTypes'; // REDUCERS\n\nexport var reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : InitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.TICK:\n      return _objectSpread({}, state, {\n        lastUpdate: action.ts,\n        light: !!action.light\n      });\n\n    case actionTypes.INCREMENT:\n      return _objectSpread({}, state, {\n        count: state.count + 1\n      });\n\n    case actionTypes.DECREMENT:\n      return _objectSpread({}, state, {\n        count: state.count - 1\n      });\n\n    case actionTypes.RESET:\n      return _objectSpread({}, state, {\n        count: exampleInitialState.count\n      });\n\n    case actionTypes.LOAD_EXAMPLE_DATA:\n      return _objectSpread({}, state, {\n        exampleData: action.data\n      });\n\n    case actionTypes.LOADING_DATA_FAILURE:\n      return _objectSpread({}, state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/morteza/Codes/bimnet/with-redux-persist-app/store/reducers.js"],"names":["InitialState","actionTypes","reducer","state","action","type","TICK","lastUpdate","ts","light","INCREMENT","count","DECREMENT","RESET","exampleInitialState","LOAD_EXAMPLE_DATA","exampleData","data","LOADING_DATA_FAILURE","error"],"mappings":";AAAA,SAASA,YAAT,QAA6B,SAA7B;AACA,SAASC,WAAT,QAA4B,eAA5B,C,CAEA;;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,WAAW,CAACK,IAAjB;AACE,+BACKH,KADL;AAEEI,QAAAA,UAAU,EAAEH,MAAM,CAACI,EAFrB;AAGEC,QAAAA,KAAK,EAAE,CAAC,CAACL,MAAM,CAACK;AAHlB;;AAKF,SAAKR,WAAW,CAACS,SAAjB;AACE,+BACKP,KADL;AAEEQ,QAAAA,KAAK,EAAER,KAAK,CAACQ,KAAN,GAAc;AAFvB;;AAIF,SAAKV,WAAW,CAACW,SAAjB;AACE,+BACKT,KADL;AAEEQ,QAAAA,KAAK,EAAER,KAAK,CAACQ,KAAN,GAAc;AAFvB;;AAIF,SAAKV,WAAW,CAACY,KAAjB;AACE,+BACKV,KADL;AAEEQ,QAAAA,KAAK,EAAEG,mBAAmB,CAACH;AAF7B;;AAIF,SAAKV,WAAW,CAACc,iBAAjB;AACE,+BACKZ,KADL;AAEEa,QAAAA,WAAW,EAAEZ,MAAM,CAACa;AAFtB;;AAIF,SAAKhB,WAAW,CAACiB,oBAAjB;AACE,+BACKf,KADL;AAEEgB,QAAAA,KAAK,EAAE;AAFT;;AAIF;AACE,aAAOhB,KAAP;AAjCJ;AAmCD,CApCM","sourcesContent":["import { InitialState } from './state';\nimport { actionTypes } from './actionTypes';\n\n// REDUCERS\nexport const reducer = (state = InitialState, action) => {\n  switch (action.type) {\n    case actionTypes.TICK:\n      return {\n        ...state,\n        lastUpdate: action.ts,\n        light: !!action.light\n      }\n    case actionTypes.INCREMENT:\n      return {\n        ...state,\n        count: state.count + 1\n      }\n    case actionTypes.DECREMENT:\n      return {\n        ...state,\n        count: state.count - 1\n      }\n    case actionTypes.RESET:\n      return {\n        ...state,\n        count: exampleInitialState.count\n      }\n    case actionTypes.LOAD_EXAMPLE_DATA:\n      return {\n        ...state,\n        exampleData: action.data\n      }\n    case actionTypes.LOADING_DATA_FAILURE:\n      return {\n        ...state,\n        error: true\n      }\n    default:\n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}