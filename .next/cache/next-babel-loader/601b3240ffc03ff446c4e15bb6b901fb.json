{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/morteza/Codes/bimnet/with-redux-persist-app/components/data-list.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { loadExampleData, loadingExampleDataFailure } from '../store';\n\nvar DataList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataList, _Component);\n\n  function DataList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DataList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DataList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isDataLoading: false\n    });\n\n    return _this;\n  }\n\n  _createClass(DataList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          loadExampleData = _this$props.loadExampleData,\n          loadingExampleDataFailure = _this$props.loadingExampleDataFailure;\n      var self = this;\n      this.setState({\n        isDataLoading: true\n      });\n      window.fetch('https://jsonplaceholder.typicode.com/users').then(function (response) {\n        if (response.status !== 200) {\n          console.log('Looks like there was a problem. Status Code: ' + response.status);\n          loadingExampleDataFailure();\n          self.setState({\n            isDataLoading: false\n          });\n          return;\n        }\n\n        response.json().then(function (data) {\n          loadExampleData(data);\n          self.setState({\n            isDataLoading: false\n          });\n        });\n      })[\"catch\"](function (err) {\n        console.log('Fetch Error :-S', err);\n        loadingExampleDataFailure();\n        self.setState({\n          isDataLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          exampleData = _this$props2.exampleData,\n          error = _this$props2.error;\n      var isDataLoading = this.state.isDataLoading;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"API DATA:\"), exampleData && !isDataLoading ? React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, _JSON$stringify(exampleData, null, 2))) : React.createElement(\"p\", {\n        style: {\n          color: 'blue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Loading...\"), error && React.createElement(\"p\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Error fetching data.\"));\n    }\n  }]);\n\n  return DataList;\n}(Component);\n\nfunction mapStateToProps(state) {\n  var exampleData = state.exampleData,\n      error = state.error;\n  return {\n    exampleData: exampleData,\n    error: error\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    loadExampleData: loadExampleData,\n    loadingExampleDataFailure: loadingExampleDataFailure\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataList);","map":{"version":3,"sources":["/Users/morteza/Codes/bimnet/with-redux-persist-app/components/data-list.js"],"names":["React","Component","connect","bindActionCreators","loadExampleData","loadingExampleDataFailure","DataList","isDataLoading","props","self","setState","window","fetch","then","response","status","console","log","json","data","err","exampleData","error","state","color","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { loadExampleData, loadingExampleDataFailure } from '../store'\n\nclass DataList extends Component {\n  state = {\n    isDataLoading: false\n  }\n\n  componentDidMount () {\n    const { loadExampleData, loadingExampleDataFailure } = this.props\n    const self = this\n\n    this.setState({ isDataLoading: true })\n    window\n      .fetch('https://jsonplaceholder.typicode.com/users')\n      .then(function (response) {\n        if (response.status !== 200) {\n          console.log(\n            'Looks like there was a problem. Status Code: ' + response.status\n          )\n          loadingExampleDataFailure()\n          self.setState({ isDataLoading: false })\n          return\n        }\n        response.json().then(function (data) {\n          loadExampleData(data)\n          self.setState({ isDataLoading: false })\n        })\n      })\n      .catch(function (err) {\n        console.log('Fetch Error :-S', err)\n        loadingExampleDataFailure()\n        self.setState({ isDataLoading: false })\n      })\n  }\n\n  render () {\n    const { exampleData, error } = this.props\n    const { isDataLoading } = this.state\n\n    return (\n      <div>\n        <h1>API DATA:</h1>\n        {exampleData && !isDataLoading ? (\n          <pre>\n            <code>{JSON.stringify(exampleData, null, 2)}</code>\n          </pre>\n        ) : (\n          <p style={{ color: 'blue' }}>Loading...</p>\n        )}\n        {error && <p style={{ color: 'red' }}>Error fetching data.</p>}\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  const { exampleData, error } = state\n  return { exampleData, error }\n}\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ loadExampleData, loadingExampleDataFailure }, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DataList)\n"]},"metadata":{},"sourceType":"module"}