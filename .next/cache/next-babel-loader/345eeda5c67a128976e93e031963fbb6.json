{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { InitialState } from './state';\nimport { actionTypes } from './actionTypes'; // REDUCERS\n\nexport const reducer = (state = InitialState, action) => {\n  switch (action.type) {\n    case actionTypes.TICK:\n      return _Object$assign({}, state, {\n        lastUpdate: action.ts,\n        light: !!action.light\n      });\n\n    case actionTypes.INCREMENT:\n      return _Object$assign({}, state, {\n        count: state.count + 1\n      });\n\n    case actionTypes.DECREMENT:\n      return _Object$assign({}, state, {\n        count: state.count - 1\n      });\n\n    case actionTypes.RESET:\n      return _Object$assign({}, state, {\n        count: exampleInitialState.count\n      });\n\n    case actionTypes.LOAD_EXAMPLE_DATA:\n      return _Object$assign({}, state, {\n        exampleData: action.data\n      });\n\n    case actionTypes.LOADING_DATA_FAILURE:\n      return _Object$assign({}, state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/morteza/Codes/bimnet/with-redux-persist-app/store/reducers.js"],"names":["InitialState","actionTypes","reducer","state","action","type","TICK","lastUpdate","ts","light","INCREMENT","count","DECREMENT","RESET","exampleInitialState","LOAD_EXAMPLE_DATA","exampleData","data","LOADING_DATA_FAILURE","error"],"mappings":";AAAA,SAASA,YAAT,QAA6B,SAA7B;AACA,SAASC,WAAT,QAA4B,eAA5B,C,CAEA;;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,WAAW,CAACK,IAAjB;AACE,aAAO,eAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAC9BI,QAAAA,UAAU,EAAEH,MAAM,CAACI,EADW;AAE9BC,QAAAA,KAAK,EAAE,CAAC,CAACL,MAAM,CAACK;AAFc,OAAzB,CAAP;;AAIF,SAAKR,WAAW,CAACS,SAAjB;AACE,aAAO,eAAc,EAAd,EAAkBP,KAAlB,EAAyB;AAC9BQ,QAAAA,KAAK,EAAER,KAAK,CAACQ,KAAN,GAAc;AADS,OAAzB,CAAP;;AAGF,SAAKV,WAAW,CAACW,SAAjB;AACE,aAAO,eAAc,EAAd,EAAkBT,KAAlB,EAAyB;AAC9BQ,QAAAA,KAAK,EAAER,KAAK,CAACQ,KAAN,GAAc;AADS,OAAzB,CAAP;;AAGF,SAAKV,WAAW,CAACY,KAAjB;AACE,aAAO,eAAc,EAAd,EAAkBV,KAAlB,EAAyB;AAC9BQ,QAAAA,KAAK,EAAEG,mBAAmB,CAACH;AADG,OAAzB,CAAP;;AAGF,SAAKV,WAAW,CAACc,iBAAjB;AACE,aAAO,eAAc,EAAd,EAAkBZ,KAAlB,EAAyB;AAC9Ba,QAAAA,WAAW,EAAEZ,MAAM,CAACa;AADU,OAAzB,CAAP;;AAGF,SAAKhB,WAAW,CAACiB,oBAAjB;AACE,aAAO,eAAc,EAAd,EAAkBf,KAAlB,EAAyB;AAC9BgB,QAAAA,KAAK,EAAE;AADuB,OAAzB,CAAP;;AAGF;AACE,aAAOhB,KAAP;AA3BJ;AA6BD,CA9BM","sourcesContent":["import { InitialState } from './state';\nimport { actionTypes } from './actionTypes';\n\n// REDUCERS\nexport const reducer = (state = InitialState, action) => {\n  switch (action.type) {\n    case actionTypes.TICK:\n      return Object.assign({}, state, {\n        lastUpdate: action.ts,\n        light: !!action.light\n      })\n    case actionTypes.INCREMENT:\n      return Object.assign({}, state, {\n        count: state.count + 1\n      })\n    case actionTypes.DECREMENT:\n      return Object.assign({}, state, {\n        count: state.count - 1\n      })\n    case actionTypes.RESET:\n      return Object.assign({}, state, {\n        count: exampleInitialState.count\n      })\n    case actionTypes.LOAD_EXAMPLE_DATA:\n      return Object.assign({}, state, {\n        exampleData: action.data\n      })\n    case actionTypes.LOADING_DATA_FAILURE:\n      return Object.assign({}, state, {\n        error: true\n      })\n    default:\n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}